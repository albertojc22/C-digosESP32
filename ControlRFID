//Control del módulo RFID RC522
#include <SPI.h>
#include <MFRC522.h>
#include <ESP32Servo.h>

#define RST_PIN  4     // Pin de reset RC522
#define SS_PIN   5     // Pin SDA RC522
#define SERVO_PIN 13   // Pin del servomotor (cable amarillo/naranja)

MFRC522 mfrc522(SS_PIN, RST_PIN);
Servo myServo;

// Tu UID real (43 A4 B4 FE en formato hexadecimal)
byte validUID[] = {0x43, 0xA4, 0xB4, 0xFE};

void setup() {
  Serial.begin(115200);
  while (!Serial); // Espera a que el puerto serial esté listo
  
  SPI.begin();
  mfrc522.PCD_Init();
  
  // Configuración avanzada del servo para ESP32
  ESP32PWM::allocateTimer(0);
  myServo.setPeriodHertz(50); // Frecuencia estándar de servos (50Hz)
  myServo.attach(SERVO_PIN, 500, 2400); // Ajuste de pulsos mín/máx
  
  // Inicializa el servo en posición 0°
  myServo.write(0);
  delay(1000); // Tiempo para llegar a la posición
  
  Serial.println("Sistema RFID + Servo listo");
  Serial.println("Acerca tu tarjeta válida...");
}

void loop() {
  // Verificación de tarjeta
  if (!mfrc522.PICC_IsNewCardPresent() || !mfrc522.PICC_ReadCardSerial()) {
    return;
  }

  // Mostrar UID detectado
  Serial.print("UID detectado:");
  printUID(mfrc522.uid.uidByte, mfrc522.uid.size);

  // Comparación con UID válido
  if (compareUID(mfrc522.uid.uidByte, validUID, mfrc522.uid.size)) {
    Serial.println("Acceso concedido - Activando servo");
    activateServo();
  } else {
    Serial.println("Acceso denegado - UID no reconocido");
  }

  mfrc522.PICC_HaltA();
}

void activateServo() {
  myServo.write(180);     // Gira a 180° inmediatamente
  Serial.println("Servo: 180°");
  delay(2000);            // Espera 2 segundos
  myServo.write(0);       // Vuelve a 0°
  Serial.println("Servo: 0°");
  delay(500);             // Pequeña pausa antes de nueva lectura
}

bool compareUID(byte *readUID, byte *validUID, byte size) {
  for (byte i = 0; i < size; i++) {
    if (readUID[i] != validUID[i]) return false;
  }
  return true;
}

void printUID(byte *uid, byte size) {
  for (byte i = 0; i < size; i++) {
    Serial.print(uid[i] < 0x10 ? " 0" : " ");
    Serial.print(uid[i], HEX);
  }
  Serial.println();
}
